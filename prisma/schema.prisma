// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Sistema de Tramitação Parlamentar - Schema SQLite
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ===== CORE MODELS =====

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String?  // Hash da senha para autenticação
  role      Role     @default(PUBLIC)
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos específicos por role
  parlamentar Parlamentar?
  admin       Admin?

  @@map("users")
}

model Admin {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  
  // Dados específicos do admin
  nivel         AdminLevel @default(OPERADOR)
  departamento  String?
  ativo         Boolean    @default(true)
  
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("admins")
}

model Partido {
  id          String    @id @default(cuid())
  sigla       String    @unique // Ex: PT, PSDB, MDB
  nome        String    // Ex: Partido dos Trabalhadores
  numero      Int       @unique // Número eleitoral do partido
  fundacao    DateTime? // Data de fundação
  presidente  String?   // Nome do presidente nacional
  website     String?   // Site oficial
  logo        String?   // URL ou caminho para logo
  ativo       Boolean   @default(true)
  
  // Relacionamentos
  parlamentares Parlamentar[]
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("partidos")
}

model Parlamentar {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  
  // Dados do parlamentar
  matricula     String    @unique
  nome          String
  partidoId     String    // Relacionamento com partido
  partido       Partido   @relation(fields: [partidoId], references: [id])
  uf            String
  mandatoInicio DateTime
  mandatoFim    DateTime?
  ativo         Boolean   @default(true)
  
  // Dados específicos para Vereadores
  cargo         CargoParlamentar? @default(VEREADOR)
  presidenteCamara Boolean @default(false) // Se é presidente da câmara
  dataEleiçaoPresidencia DateTime? // Data quando foi eleito presidente
  mandatoPresidenciaFim DateTime? // Fim do mandato de presidência
  
  // Dados adicionais
  telefone      String?
  endereco      String?
  profissao     String?
  biografia     String?
  foto          String?   // URL ou caminho para foto do parlamentar
  
  // Relacionamentos
  proposicoes   Proposicao[]
  relatorias    Relatoria[]
  presencas     Presenca[]
  votos         Voto[]
  emendas       Emenda[]
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("parlamentares")
}

// ===== PROPOSIÇÕES E TRAMITAÇÃO =====

model Proposicao {
  id          String            @id @default(cuid())
  numero      String
  ano         Int
  tipo        TipoProposicao
  ementa      String
  justificacao String?
  autorId     String
  autor       Parlamentar       @relation(fields: [autorId], references: [id])
  
  // Estado de tramitação
  estadoAtual EstadoTramitacao  @default(DRAFT_INITIATED)
  
  // Timestamps
  dataApresentacao DateTime
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  
  // Relacionamentos
  tramitacoes      TramitacaoEvento[]
  relatorias       Relatoria[]
  emendas          Emenda[]
  votacoes         Votacao[]
  
  @@unique([numero, ano, tipo])
  @@map("proposicoes")
}

model TramitacaoEvento {
  id            String           @id @default(cuid())
  proposicaoId  String
  proposicao    Proposicao       @relation(fields: [proposicaoId], references: [id])
  
  // Estado da tramitação
  estadoAnterior EstadoTramitacao?
  estadoNovo     EstadoTramitacao
  
  // Contexto do evento
  comissaoId     String?
  comissao       Comissao?        @relation(fields: [comissaoId], references: [id])
  responsavelId  String?
  observacoes    String?
  
  // Timestamps
  dataEvento     DateTime
  createdAt      DateTime         @default(now())
  
  @@map("tramitacao_eventos")
}

// ===== ESTRUTURA ORGANIZACIONAL =====

model Comissao {
  id              String             @id @default(cuid())
  nome            String
  sigla           String             @unique
  tipo            TipoComissao
  ativa           Boolean            @default(true)
  
  // Relacionamentos
  relatorias      Relatoria[]
  tramitacoes     TramitacaoEvento[]
  votacoes        Votacao[]
  
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt

  @@map("comissoes")
}

model Relatoria {
  id            String      @id @default(cuid())
  proposicaoId  String
  proposicao    Proposicao  @relation(fields: [proposicaoId], references: [id])
  parlamentarId String
  parlamentar   Parlamentar @relation(fields: [parlamentarId], references: [id])
  comissaoId    String
  comissao      Comissao    @relation(fields: [comissaoId], references: [id])
  
  // Status da relatoria
  parecer       String?
  dataDesignacao DateTime
  dataEntrega   DateTime?
  status        StatusRelatoria @default(DESIGNADO)
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("relatorias")
}

// ===== VOTAÇÕES =====

model Votacao {
  id            String         @id @default(cuid())
  proposicaoId  String
  proposicao    Proposicao     @relation(fields: [proposicaoId], references: [id])
  comissaoId    String?
  comissao      Comissao?      @relation(fields: [comissaoId], references: [id])
  
  // Dados da votação
  tipo          TipoVotacao
  dataVotacao   DateTime
  resultado     ResultadoVotacao?
  
  // Resultados
  votosFavor    Int            @default(0)
  votosContra   Int            @default(0)
  abstencoes    Int            @default(0)
  
  // Relacionamentos
  votos         Voto[]
  
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("votacoes")
}

model Voto {
  id            String      @id @default(cuid())
  votacaoId     String
  votacao       Votacao     @relation(fields: [votacaoId], references: [id])
  parlamentarId String
  parlamentar   Parlamentar @relation(fields: [parlamentarId], references: [id])
  
  // Tipo de voto
  tipoVoto      TipoVoto
  
  createdAt     DateTime    @default(now())

  @@unique([votacaoId, parlamentarId])
  @@map("votos")
}

// ===== EMENDAS =====

model Emenda {
  id            String      @id @default(cuid())
  proposicaoId  String
  proposicao    Proposicao  @relation(fields: [proposicaoId], references: [id])
  autorId       String
  autor         Parlamentar @relation(fields: [autorId], references: [id])
  
  // Dados da emenda
  numero        String
  tipo          TipoEmenda
  texto         String
  justificativa String?
  
  // Status
  status        StatusEmenda @default(APRESENTADA)
  dataApresentacao DateTime
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([proposicaoId, numero])
  @@map("emendas")
}

// ===== PRESENÇA E ATIVIDADES =====

model Presenca {
  id            String      @id @default(cuid())
  parlamentarId String
  parlamentar   Parlamentar @relation(fields: [parlamentarId], references: [id])
  
  // Dados da sessão
  tipoSessao    TipoSessao
  dataSessao    DateTime
  presente      Boolean
  justificativa String?
  
  createdAt     DateTime    @default(now())

  @@unique([parlamentarId, dataSessao, tipoSessao])
  @@map("presencas")
}

// ===== SISTEMA DE PARAMETRIZAÇÃO =====

// 1. Configuração Básica do Sistema
model SistemaConfiguracaoGeral {
  id                  String   @id @default(cuid())
  nomeInstituicao     String
  sigla               String?
  logoPrincipal       String?  // URL ou base64 da imagem
  logoSecundario      String?
  favicon             String?
  corPrimaria         String?  // hex color
  corSecundaria       String?
  corDestaque         String?
  enderecoCompleto    String?
  telefone            String?
  email               String?
  website             String?
  cnpj                String?
  timezone            String   @default("America/Sao_Paulo")
  idiomapadrao        String   @default("pt-BR")
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("sistema_configuracao_geral")
}

// 2. Configurações de Sessão Legislativa
model SessaoLegislativaConfig {
  id                     String          @id @default(cuid())
  nome                   String
  dataInicio             DateTime
  dataFim                DateTime
  tipo                   TipoSessaoLegislativa
  ativa                  Boolean         @default(false)
  calendarioSessoes      String?         // JSON com dias da semana
  horarioPadraoInicio    String?         // formato HH:mm
  horarioPadraoFim       String?
  quorumMinimo           Int?
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt

  @@map("sessao_legislativa_config")
}

// 3. Perfis e Permissões
model SistemaPerfis {
  id           String    @id @default(cuid())
  nome         String
  descricao    String?
  nivelAcesso  Int       // 1-5 (público até admin)
  ativo        Boolean   @default(true)
  permissoes   String?   // JSON estrutura de permissões
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relacionamentos
  perfilPermissoes PerfilPermissoes[]

  @@map("sistema_perfis")
}

model PerfilPermissoes {
  id               String        @id @default(cuid())
  perfilId         String
  perfil           SistemaPerfis @relation(fields: [perfilId], references: [id])
  modulo           String
  funcionalidade   String
  podeVisualizar   Boolean       @default(false)
  podeCriar        Boolean       @default(false)
  podeEditar       Boolean       @default(false)
  podeExcluir      Boolean       @default(false)
  podeAprovar      Boolean       @default(false)

  @@map("perfil_permissoes")
}

// 4. Configurações de Autenticação
model SistemaAutenticacaoConfig {
  id                    String   @id @default(cuid())
  senhaMinLength        Int      @default(8)
  senhaRequereNumeros   Boolean  @default(true)
  senhaRequereEspeciais Boolean  @default(true)
  senhaExpiraDias       Int?     @default(90)
  oauth2Google          Boolean  @default(false)
  oauth2Microsoft       Boolean  @default(false)
  oauth2GovBr           Boolean  @default(false)
  certificadoDigital    Boolean  @default(false)
  sessaoTimeoutMinutos  Int      @default(60)
  mfaObrigatorio        Boolean  @default(false)
  ipWhitelistAtivo      Boolean  @default(false)
  ipWhitelist           String?  // JSON array de IPs
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("sistema_autenticacao_config")
}

// 5. Tipos de Documentos
model DocumentoTipos {
  id                  String              @id @default(cuid())
  nome                String
  sigla               String?
  numeracaoFormato    String              // ex: "PL {numero}/{ano}"
  workflowId          String?
  workflow            Workflows?          @relation(fields: [workflowId], references: [id])
  templateConteudo    String?             // HTML template
  camposObrigatorios  String?             // JSON
  validacoes          String?             // JSON
  prazoTramitacao     Int?                // dias
  ativo               Boolean             @default(true)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  
  // Relacionamentos
  templates           DocumentoTemplates[]

  @@map("documento_tipos")
}

// 6. Templates de Documentos
model DocumentoTemplates {
  id                String         @id @default(cuid())
  nome              String
  tipoDocumentoId   String
  tipoDocumento     DocumentoTipos @relation(fields: [tipoDocumentoId], references: [id])
  conteudoHtml      String         // Template HTML
  variaveis         String?        // JSON {nome_parlamentar}, {data_sessao}, etc.
  cabecalho         String?
  rodape            String?
  margens           String?        // JSON configuração de impressão
  versao            Int            @default(1)
  ativo             Boolean        @default(true)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt

  @@map("documento_templates")
}

// 7. Workflows
model Workflows {
  id          String           @id @default(cuid())
  nome        String
  descricao   String?
  etapas      String?          // JSON estrutura das etapas
  ativo       Boolean          @default(true)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  
  // Relacionamentos
  etapasWorkflow WorkflowEtapas[]
  documentoTipos DocumentoTipos[]

  @@map("workflows")
}

model WorkflowEtapas {
  id                    String     @id @default(cuid())
  workflowId            String
  workflow              Workflows  @relation(fields: [workflowId], references: [id])
  ordem                 Int
  nome                  String
  responsavelPerfilId   String?
  prazoDias             Int?
  obrigatoria           Boolean    @default(true)
  paralela              Boolean    @default(false)
  condicoes             String?    // JSON condições para execução
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt

  @@map("workflow_etapas")
}

// 8. Configurações de Prazos
model SistemaPrazosConfig {
  id                        String   @id @default(cuid())
  tipoPrazo                 String   // relatoria, emenda, votacao
  diasUteis                 Int
  permiteProrrogacao        Boolean  @default(false)
  maximoProrrogacoes        Int?
  notificarDiasAntes        Int?
  escalonarAposVencimento   Boolean  @default(false)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@map("sistema_prazos_config")
}

// 9. Feriados
model FeriadosMunicipais {
  id          String              @id @default(cuid())
  data        DateTime
  descricao   String
  tipo        TipoFeriado
  recorrente  Boolean             @default(false)
  createdAt   DateTime            @default(now())

  @@map("feriados_municipais")
}

// 10. Configurações de Numeração
model SistemaNumeracaoConfig {
  id                String   @id @default(cuid())
  tipoDocumento     String
  formato           String   // {tipo}-{numero}/{ano}
  contadorAtual     Int      @default(0)
  reiniciaAnualmente Boolean @default(true)
  prefixo           String?
  sufixo            String?
  digitosMinimos    Int      @default(3)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("sistema_numeracao_config")
}

// 11. Configurações de Notificações
model SistemaNotificacoesConfig {
  id                       String   @id @default(cuid())
  tipoEvento               String   // documento_criado, prazo_vencendo
  enviarEmail              Boolean  @default(true)
  enviarSms                Boolean  @default(false)
  enviarPush               Boolean  @default(true)
  templateEmail            String?
  templateSms              String?
  destinatariosAutomaticos String?  // JSON perfis que recebem
  diasAntecedencia         Int?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt

  @@map("sistema_notificacoes_config")
}

// 12. Configurações de Integração
model SistemaIntegracoesConfig {
  id                    String    @id @default(cuid())
  nomeIntegracao        String    // gov.br, receita_federal, tse
  endpointUrl           String?
  apiKey                String?
  metodoAuth            MetodoAuth?
  ativa                 Boolean   @default(true)
  configuracoesExtras   String?   // JSON
  ultimaSincronizacao   DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("sistema_integracoes_config")
}

// 13. Configurações de Transparência
model TransparenciaConfig {
  id                        String   @id @default(cuid())
  mostrarVotacoesNominais   Boolean  @default(true)
  mostrarPresencas          Boolean  @default(true)
  mostrarSalarios           Boolean  @default(true)
  mostrarGastosGabinete     Boolean  @default(true)
  permitirDownloadDocumentos Boolean @default(true)
  textoLeiAcessoInformacao  String?
  emailOuvidoria            String?
  prazoRespostaDias         Int      @default(20)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@map("transparencia_config")
}

// 14. Configurações de Backup
model SistemaBackupConfig {
  id                 String            @id @default(cuid())
  frequenciaBackup   FrequenciaBackup
  horarioBackup      String?           // formato HH:mm
  localArmazenamento String?           // S3, local, etc.
  retencaoDias       Int               @default(90)
  criptografiaAtiva  Boolean           @default(true)
  notificarFalhas    Boolean           @default(true)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  @@map("sistema_backup_config")
}

// 15. Histórico de Configurações
model ConfigHistorico {
  id            String   @id @default(cuid())
  tabela        String   // nome da tabela configurada
  registroId    String   // ID do registro alterado
  usuarioId     String   // usuário que fez a alteração
  valoresAntes  String?  // JSON dos valores anteriores
  valoresDepois String?  // JSON dos novos valores
  observacoes   String?
  createdAt     DateTime @default(now())

  @@map("config_historico")
}

// ===== ENUMS =====

enum Role {
  PUBLIC
  PARLAMENTAR  
  ADMIN
}

enum AdminLevel {
  OPERADOR
  GESTOR
  SUPER_ADMIN
}

enum TipoProposicao {
  PL    // Projeto de Lei
  PLC   // Projeto de Lei Complementar
  PLO   // Projeto de Lei Orçamentária
  MP    // Medida Provisória
  PEC   // Proposta de Emenda Constitucional
  REQ   // Requerimento
  INC   // Indicação
  PDC   // Projeto de Decreto Legislativo
}

enum EstadoTramitacao {
  // Fase 1: Criação e Recepção
  DRAFT_INITIATED
  SUBMITTED_FOR_REVIEW
  UNDER_FORMAL_REVIEW
  FORMAL_REVIEW_APPROVED
  
  // Fase 2: Revisão em Comissão
  COMMITTEE_ASSIGNED
  IN_COMMITTEE_REVIEW
  COMMITTEE_ANALYZING
  PENDING_RAPPORTEUR_OPINION
  RAPPORTEUR_OPINION_ISSUED
  IN_COMMITTEE_VOTING
  COMMITTEE_APPROVED
  COMMITTEE_REJECTED
  RETURNED_TO_COMMITTEE
  
  // Fase 3: Sessão Plenária
  READY_FOR_PLENARY
  IN_PLENARY_DISCUSSION
  PENDING_AMENDMENTS
  IN_VOTING
  PLENARY_APPROVED
  PLENARY_REJECTED
  
  // Fase 4: Processo Bicameral
  IN_REVIEWING_HOUSE
  REVIEWING_HOUSE_APPROVED
  REVIEWING_HOUSE_MODIFIED
  IN_BICAMERAL_CONFLICT_RESOLUTION
  
  // Fase 5: Revisão Executiva
  SENT_TO_EXECUTIVE
  UNDER_EXECUTIVE_REVIEW
  EXECUTIVE_SANCTIONED
  EXECUTIVE_VETOED
  VETO_OVERRIDE_VOTING
  
  // Fase 6: Finalização
  PROMULGATED
  PUBLISHED_ACTIVE
  
  // Estados Especiais
  ARCHIVED
  WITHDRAWN
  EXPIRED
}

enum TipoComissao {
  PERMANENTE
  TEMPORARIA
  ESPECIAL
  CPI
  MISTA
}

enum StatusRelatoria {
  DESIGNADO
  EM_ANALISE
  PARECER_PRONTO
  APRESENTADO
}

enum TipoVotacao {
  NOMINAL
  SIMBOLICA
  SECRETA
  ELETRONICA
}

enum ResultadoVotacao {
  APROVADO
  REJEITADO
  RETIRADO
  ADIADO
}

enum TipoVoto {
  FAVOR
  CONTRA
  ABSTENCAO
  OBSTRUCAO
}

enum TipoEmenda {
  SUBSTITUTIVO
  MODIFICATIVA
  ADITIVA
  SUPRESSIVA
  AGLUTINATIVA
}

enum StatusEmenda {
  APRESENTADA
  EM_ANALISE
  APROVADA
  REJEITADA
  RETIRADA
}

enum TipoSessao {
  ORDINARIA
  EXTRAORDINARIA
  SOLENE
  COMISSAO
}

enum TipoSessaoLegislativa {
  ORDINARIA
  EXTRAORDINARIA
  ESPECIAL
}

enum TipoFeriado {
  NACIONAL
  ESTADUAL
  MUNICIPAL
}

enum MetodoAuth {
  API_KEY
  OAUTH2
  BASIC
}

enum CargoParlamentar {
  VEREADOR
  PREFEITO
  VICE_PREFEITO
  SECRETARIO
}

enum FrequenciaBackup {
  DIARIO
  SEMANAL
  MENSAL
}
